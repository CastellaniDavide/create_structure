name: Tests on every push

on:
  push

jobs:
  test-pip:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -r requirements/requirements.txt
    - name: Build
      run: |
        python setup.py sdist bdist_wheel

#   check-debsign-login:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v1
#       - name: debsign
#         run: |
#           printf "${{ secrets.GPG_KEY }}" > key.txt
#           LC_ALL=C tr -cd 0-9a-fA-F < key.txt | xxd -r -p > key.gpg
#           gpg --import < key.gpg
#           gpg --fingerprint

#   build-linux-packages:
#     needs: check-debsign-login
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v1
#       - name: Install dependences
#         run: |
#           sudo add-apt-repository ppa:jyrki-pulliainen/dh-virtualenv
#           sudo apt-get update
#           sudo apt-get install build-essential debhelper devscripts equivs dh-virtualenv python3.8

#       - name: debsign
#         run: |
#           printf "${{ secrets.GPG_KEY }}" > key.txt
#           LC_ALL=C tr -cd 0-9a-fA-F < key.txt | xxd -r -p > key.gpg
#           gpg --import < key.gpg
#           gpg --fingerprint

#       - name: Create Debian package
#         run: |
#           tar -czvf createstructure_7.0.orig.tar.gz debian/
#           cd ./debian/
#           sudo debuild -S -sa

  test-enviroment-variabiles:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: oprypin/find-latest-tag@v1
      with:
        repository: CastellaniDavide/create_structure
        releases-only: true 
      id : latest

    - run: echo "Octokit is at version ${{ steps.latest.outputs.tag }}"
    - name: Set envirorment varible(s)
      run: |
        echo "::set-output name=VERSION_TAG::$(echo ${{ steps.latest.outputs.tag }} | sed 's/v//')"
        echo "::set-output name=TAR_FILE::createstructure_$(echo ${{ steps.latest.outputs.tag }} | sed 's/v//').orig.tar.gz"
        echo "::set-output name=CHANGES_FILE::createstructure_$(echo ${{ steps.latest.outputs.tag }} | sed 's/v//')_source.changes"
        echo "::set-output name=NUPKG_FILE::createstructure_$(echo ${{ steps.latest.outputs.tag }} | sed 's/v//').nupkg"
      id: envirorment-variables
                
    - name: Print envirorment variables
      run: |
        echo ${{ steps.envirorment-variables.outputs.VERSION_TAG }}
        echo ${{ steps.envirorment-variables.outputs.TAR_FILE }}
        echo ${{ steps.envirorment-variables.outputs.CHANGES_FILE }}
        echo ${{ steps.envirorment-variables.outputs.NUPKG_FILE }}

  test-choco:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Try to build
      run: |
        cd choco 
        choco pack
        choco install createstructure -d-v -s . --pre -y --force
