# Check installations
name: Test Installations

on: push

jobs:
  ubuntu-install:
    name: Try to install on ubuntu
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      - name: Default
        uses: actions/checkout@v2

      # Runs the installation
      - name: Run installation
        run: sudo apt install git python3 python3-pip; cd ~; git clone https://github.com/CastellaniDavide/create_structure.git; cd create_structure; git pull --force; pip3 install -r requirements/requirements.txt; alias create_structure="python3 ~/create_structure/bin/create_structure.py -t=<TOCKEN> -s=<(optional)_ARRAY_OF_TEMPLATE_SOURCES> -o=<(optional)_ORGANIZATION> -i=<(optional)_FOLDERS_TO_BE_IGNORED_FROM_TEMPLATE>"
        
  windows-install:
    name: Try to install on Windows
    # Set the type of machine to run on
    runs-on: windows-latest

    steps:
      - name: Default
        uses: actions/checkout@v2

      # Runs the installation
      - name: Run installation
        run: @"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"; choco install git.install; choco install python3 --pre; cd "C:\Program Files";  git clone https://github.com/CastellaniDavide/create_structure.git; cd create_structure; git pull --force; pip3 install -r requirements/requirements.txt;New-Item -Path $Profile -Type File -Force; echo "Function CreateStructureFunction {python3 ~/create_structure/bin/create_structure.py -t=<TOCKEN> -s=<(optional)_ARRAY_OF_TEMPLATE_SOURCES> -o=<(optional)_ORGANIZATION> -i=<(optional)_FOLDERS_TO_BE_IGNORED_FROM_TEMPLATE>}" > $Profile; echo "Set-Alias -Name create_structure -Value CreateStructureFunction" >> $Profile
        