name: Action on every release

on:
  create:
    tags:
      - v*

jobs:
  test-and-publish:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        STACKMANAGER_VERSION: ${{ github.event.release.tag_name }}
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/* --verbose
    - name: Test installation
      run: |
        pip install createstructure

  pypi-install-test:
    needs: test-and-publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name:  Install
      run: |
          pip3.8 install createstructure
          
  test-ubuntu-debian-manual:
    needs: test-and-publish
    runs-on: ubuntu-latest
    steps:
    - name: Installation & execution
      run: |
        sudo apt install git python3 python3-pip python-setuptools
        cd ~
        git clone https://github.com/CastellaniDavide/create_structure.git
        cd create_structure
        git pull --force
        pip3 install setuptools
        pip3 install -r requirements/requirements.txt
        alias create_structure="python3 ~/create_structure/bin/create_structure.py -t=${{ secrets.REPO_TOKEN }} -o=CastellaniDavideTest"
        
  test-windows-manual:
    needs: test-and-publish
    runs-on: windows-latest
    steps:
    - name: Installation
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        choco install git.install -y
        choco install python3 --pre -y
        cd "C:\Program Files"
        git clone https://github.com/CastellaniDavide/create_structure.git
        cd create_structure
        git pull --force
        pip3 install -r requirements/requirements.txt
        New-Item -Path $Profile -Type File -Force
        echo "Function CreateStructureFunction {python 'C:\Program Files/create_structure/bin/create_structure.py' -t=${{ secrets.REPO_TOKEN }} -o=CastellaniDavideTest'}" > $Profile
        echo "Set-Alias -Name create_structure -Value CreateStructureFunction" >> $Profile
